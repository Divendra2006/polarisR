[{"path":"https://divendra2006.github.io/polarisR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 DIVENDRA Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An Introduction to polarisR","text":"Welcome polarisR vignette. document provides comprehensive guide using polarisR interactive application non-linear dimension reduction (NLDR) analysis. walk tab application, explaining features functionalities available help explore understand high-dimensional data. projective output layouts reduced interactive surfaces R","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette.html","id":"application-overview","dir":"Articles","previous_headings":"","what":"Application Overview","title":"An Introduction to polarisR","text":"polarisR interface organized five main tabs, designed specific aspects data analysis workflow: Dataset Preview - Load explore data, select columns, manage datasets Non-linear dimension reduction (NLDR) - Apply NLDR methods (t-SNE/UMAP) parameter configuration visualization Dynamic Tour - Explore high-dimensional structure animated projections Diagnosing - Assess embedding quality using quantitative methods 2-D Layout Comparison - Compare different NLDR configurations results tab builds upon previous ones, creating comprehensive workflow data loading advanced comparative analysis. Let’s explore tab detail.","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette.html","id":"dataset-preview-tab","dir":"Articles","previous_headings":"","what":"Dataset Preview Tab","title":"An Introduction to polarisR","text":"Dataset Preview tab starting point analysis. , can load data, select relevant columns, get quick overview dataset.  Features: Upload Dataset: can upload dataset CSV format using “Upload Dataset” button. application automatically validate file handle potential errors. Example Datasets: polarisR comes three pre-loaded datasets: four_clusters, pdfsense, trees. can select explore application’s features without needing data. Dataset Descriptions: four_clusters: synthetic dataset four distinct clusters, perfect testing clustering visualization pdfsense: high-energy physics dataset representing parton distribution function fits fake_trees: high-dimensional tree data structure 10 branching points Additional Features: Column Selection: loading dataset, can choose columns include NLDR analysis. default, columns selected. can manually select deselect columns apply changes. Data Preview: table displays first rows dataset, allowing inspect data ensure loaded correctly. Dataset Information: section provides summary dataset, including number rows, columns, types columns (numeric categorical). NLDR Datasets: run different NLDR analyses, results stored listed . can easily switch different results compare .","code":"# Access the datasets directly data(four_clusters, package = \"polarisR\") data(pdfsense, package = \"polarisR\")  data(fake_trees, package = \"polarisR\")  # View dataset information ?four_clusters ?pdfsense ?fake_trees"},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette.html","id":"non-linear-dimension-reduction-nldr-tab","dir":"Articles","previous_headings":"","what":"Non-linear dimension reduction (NLDR) Tab","title":"An Introduction to polarisR","text":"Non-linear dimension reduction (NLDR) tab main NLDR analysis happens. can choose t-SNE UMAP, configure parameters, visualize results.  Features: Choose Method: Select either t-SNE UMAP NLDR method. Perplexity: Adjust perplexity value, influences number nearest neighbors point. Max Iterations: Set maximum number iterations t-SNE algorithm. Auto-adjust perplexity: Let application automatically choose suitable perplexity value based data. formula used : perplexity = max(5, min(30, floor(n_samples / 3) - 1)), ensures perplexity 5 30, scales dataset size maintain effective neighborhood structure. Number Neighbors: Control size local neighborhood UMAP use. Min. Distance: Set minimum distance embedded points. Color Options: Choose column dataset color points visualization. useful identifying clusters patterns. Reproducibility Options: Set random seed ensure NLDR results reproducible. Run Visualization: Click button start NLDR computation. progress displayed, resulting visualization shown right. Visualization Information: panel displays parameters used current visualization, making easy track experiments.","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette.html","id":"dynamic-tour-tab","dir":"Articles","previous_headings":"","what":"Dynamic Tour Tab","title":"An Introduction to polarisR","text":"Dynamic Tour tab offers interactive way explore high-dimensional space data. provides dynamic projection data, can viewed scatter plot, sage plot, slice plot.  Features: Scatter: standard scatter plot projected data. Sage: scatter plot display adjusts projected volume, defined Laa et al. (2021). Slice: scatter plot display highlights points close projection plane, defined Laa et al. (2020). Show Axes: Toggle visibility axes tour plot. Show Wireframe: Toggle visibility wireframe edges tour plot enhanced structural visualization. Point Opacity (Alpha): Adjust transparency points. Gamma (Sage): Control effective dimensionality parameter sage plot. Slice Relative Volume (Slice): Adjust thickness slice. Enable Linked Brushing: enabled, can select points NLDR plot, corresponding points highlighted dynamic tour plot, vice-versa. powerful feature exploring relationship low-dimensional embedding original high-dimensional data.","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette.html","id":"diagnosing-tab","dir":"Articles","previous_headings":"","what":"Diagnosing Tab","title":"An Introduction to polarisR","text":"Diagnosing tab provides tools assess quality NLDR embedding. uses quollr package perform quantitative analysis embedding helps find optimal parameters visualization. Features: Binwidth Optimization: feature automatically tests range bin widths quollr analysis finds optimal configuration based Root Mean Square Error (RMSE). Run Quollr Analysis: optimizing binwidth, can run full quollr analysis get detailed assessment embedding. RMSE vs Binwidth: interactive plot showing RMSE different binwidth values. Model Summary: table detailed results binwidth optimization. Model Error: visualization shows quality model fit, highlighting areas high low prediction error. Configuration & Summary: section displays optimal binwidth configuration summary quollr model fit.","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette.html","id":"d-layout-comparison-tab","dir":"Articles","previous_headings":"","what":"2-D Layout Comparison Tab","title":"An Introduction to polarisR","text":"2-D Layout Comparison tab allows compare results different NLDR analyses. can compare different methods (t-SNE vs. UMAP) method different parameters. Features: NLDR Settings Comparison: Compare RMSE different NLDR configurations. useful finding best method parameters data. Side--Side Visualization: Display two NLDR plots next direct visual comparison. Enable Linked Brushing: side--side visualization mode, can enable linked brushing select points one plot see corresponding points highlighted . Dataset Selection: Select NLDR results want compare list stored results. Run Comparison Plot: Generate comparison plot based selection. Best Configuration Summary: comparing NLDR settings, section show best configuration found based RMSE.","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette2.html","id":"tips-and-best-practices","dir":"Articles","previous_headings":"","what":"Tips and Best Practices","title":"polarisR: Tips, Requirements, and Support","text":"Data Quality Considerations: Ensure sufficient numeric columns analysis Handle missing values upload Consider data scaling variables different ranges Minimum 50+ observations recommended stable NLDR results","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette2.html","id":"technical-requirements","dir":"Articles","previous_headings":"","what":"Technical Requirements","title":"polarisR: Tips, Requirements, and Support","text":"R Version: R >= 4.1.0 Key Dependencies: shiny, plotly, DT, quollr, Rtsne, umap Browser: Modern web browser JavaScript enabled Memory: Sufficient RAM dataset size (recommend 4GB+ large datasets)","code":""},{"path":"https://divendra2006.github.io/polarisR/articles/polarisR-vignette2.html","id":"support","dir":"Articles","previous_headings":"","what":"Support","title":"polarisR: Tips, Requirements, and Support","text":"questions, bug reports, feature requests, please visit: GitHub Repository: https://github.com/Divendra2006/polarisR Issues: https://github.com/Divendra2006/polarisR/issues","code":""},{"path":"https://divendra2006.github.io/polarisR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Divendra Yadav. Author, maintainer. Ursula Laa. Author. Jayani P. Gamage. Author. Eun-Kyung Lee. Author.","code":""},{"path":"https://divendra2006.github.io/polarisR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yadav D, Laa U, Gamage J, Lee E (2025). polarisR: Non-Linear Dimensionality Reduction Visualization Tool. R package version 0.1.0, https://github.com/Divendra2006/polarisR.","code":"@Manual{,   title = {polarisR: Non-Linear Dimensionality Reduction Visualization Tool},   author = {Divendra Yadav and Ursula Laa and Jayani P. Gamage and Eun-Kyung Lee},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/Divendra2006/polarisR}, }"},{"path":"https://divendra2006.github.io/polarisR/index.html","id":"polarisr-","dir":"","previous_headings":"","what":"polarisR: Non-Linear Dimensionality Reduction Visualization Tool","title":"polarisR: Non-Linear Dimensionality Reduction Visualization Tool","text":"polarisR shiny application visualizing high-dimensional data using non-linear dimensionality reduction (NLDR) techniques t-SNE UMAP. provides interactive platform explore high-dimensional datasets, diagnose quality embeddings using quollr package, compare different NLDR methods.","code":""},{"path":"https://divendra2006.github.io/polarisR/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"polarisR: Non-Linear Dimensionality Reduction Visualization Tool","text":"Data Loading: Load CSV datasets use one example datasets provided. NLDR Methods: Choose t-SNE UMAP dimensionality reduction. Interactive Visualization: Explore 2D embedding data interactive plots. Dynamic Tour: Take dynamic tour high-dimensional data understand structure. Embedding Diagnostics: Use quollr package diagnose quality NLDR embedding. Method Comparison: Compare results different NLDR methods parameter settings. Side--Side Visualization: View two visualizations side--side linked brushing direct comparison.","code":""},{"path":"https://divendra2006.github.io/polarisR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"polarisR: Non-Linear Dimensionality Reduction Visualization Tool","text":"can install polarisR GitHub using following commands R:","code":"# Install pak if you haven't already # install.packages(\"pak\")  pak::pak(\"Divendra2006/polarisR\")"},{"path":"https://divendra2006.github.io/polarisR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"polarisR: Non-Linear Dimensionality Reduction Visualization Tool","text":"run polarisR shiny app, use following command R: can also upload dataset CSV format.","code":"polarisR::run_nldr_viz()"},{"path":"https://divendra2006.github.io/polarisR/index.html","id":"about-the-name","dir":"","previous_headings":"","what":"About the name","title":"polarisR: Non-Linear Dimensionality Reduction Visualization Tool","text":"projective output layouts reduced interactive surfaces R","code":""},{"path":"https://divendra2006.github.io/polarisR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"polarisR: Non-Linear Dimensionality Reduction Visualization Tool","text":"project licensed MIT License - see LICENSE.md file details.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/fake_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"A high-dimensional tree data structure with 10 branching points. — fake_trees","title":"A high-dimensional tree data structure with 10 branching points. — fake_trees","text":"Data obtained diffusion limited aggregation tree simulation phate python phateR packages, reconstructed wide data.frame rather list. 3000 rows 101 columns, first 100 columns labelled dim1 - dim100, numeric, final column factor representing branch id.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/fake_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A high-dimensional tree data structure with 10 branching points. — fake_trees","text":"","code":"fake_trees"},{"path":"https://divendra2006.github.io/polarisR/reference/fake_trees.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A high-dimensional tree data structure with 10 branching points. — fake_trees","text":"object class data.frame 3000 rows 101 columns.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/fake_trees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A high-dimensional tree data structure with 10 branching points. — fake_trees","text":"PHATE","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/four_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Four Clusters Simulated Dataset — four_clusters","title":"Four Clusters Simulated Dataset — four_clusters","text":"dataset (four_clusters) contains simulated data four distinct clusters, generated using different shapes scales. ideal demonstrating clustering algorithms visualization techniques.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/four_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Four Clusters Simulated Dataset — four_clusters","text":"","code":"four_clusters"},{"path":"https://divendra2006.github.io/polarisR/reference/four_clusters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Four Clusters Simulated Dataset — four_clusters","text":"data frame 2000 rows 4 variables: x1 Numeric. First feature coordinate. x2 Numeric. Second feature coordinate. x3 Numeric. Third feature coordinate. x4 Numeric. Fourth feature coordinate. cluster Factor. cluster label (1, 2, 3, 4).","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/four_clusters.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Four Clusters Simulated Dataset — four_clusters","text":"Simulated using cardinalR package.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/four_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Four Clusters Simulated Dataset — four_clusters","text":"Four Clusters Simulated Dataset","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/four_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Four Clusters Simulated Dataset — four_clusters","text":"","code":"data(four_clusters) head(four_clusters) #> # A tibble: 6 × 5 #>       x1     x2      x3      x4 cluster  #>    <dbl>  <dbl>   <dbl>   <dbl> <chr>    #> 1 -0.705  0.761 -0.384  -0.0113 cluster3 #> 2 -0.590  0.671  0.281   0.344  cluster3 #> 3  0.958  0.362 -0.473  -0.827  cluster2 #> 4  0.484 -0.549 -0.0832  0.270  cluster1 #> 5  0.611  0.218 -1.18    1.09   cluster4 #> 6  1.11   0.281 -0.474  -1.04   cluster2 dim(four_clusters) #> [1] 2000    5"},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"Loads returns named list built-example datasets included polarisR package. datasets specifically chosen demonstrate different characteristics challenges non-linear dimensionality reduction analysis visualization.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"","code":"load_custom_datasets()"},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"named list containing successfully loaded datasets. element data.frame following structure: $four_clusters: data.frame cluster analysis data $pdfsense: data.frame high-dimensional physics data $trees: data.frame tree-structured synthetic data dataset fails load, warning issued function continues, returning successfully loaded datasets. empty list returned datasets can loaded.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"function uses data load datasets package namespace. polarisR package properly installed data files missing, warnings generated affected datasets.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"function includes robust error handling: dataset loaded separate tryCatch block Loading failures generate warnings rather stopping execution Existence checks ensure datasets properly loaded inclusion Environment management prevents namespace pollution","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":"usage-in-application","dir":"Reference","previous_headings":"","what":"Usage in Application","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"function typically called application initialization populate example dataset dropdown UI. returned list stored reactive value can dynamically extended user-uploaded datasets.","code":""},{"path":[]},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"GSoC Contributor","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/load_custom_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Built-in Datasets for NLDR Visualization — load_custom_datasets","text":"","code":"if (FALSE) { # \\dontrun{ # Load all available datasets datasets <- load_custom_datasets() names(datasets)  # Shows available dataset names  # Check what was successfully loaded if (\"four_clusters\" %in% names(datasets)) {   dim(datasets$four_clusters)   head(datasets$four_clusters) }  # Use in shiny application initialization custom_datasets <- shiny::reactiveVal(load_custom_datasets()) available_datasets <- shiny::reactiveVal(   c(\"None\", names(load_custom_datasets())) ) } # }"},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":null,"dir":"Reference","previous_headings":"","what":"NLDR Visualization Tool Server Logic — nldr_viz_server","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"Implements comprehensive server-side logic NLDR visualization tool. function handles reactive computations, data processing, visualization generation, user interactions multi-tab NLDR analysis application.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"","code":"nldr_viz_server(input, output, session)"},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"input shiny input object containing user interface inputs. includes form controls, button clicks, plot selections, file uploads. output shiny output object sending rendered content UI. Used plots, tables, text outputs, dynamic UI elements. session shiny session object managing client-server communication. Provides access session state, input updates, client information.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"Invisible NULL. function sets reactive expressions observers handle server-side logic. actual outputs managed shiny reactive system sent client via output object.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"server function manages several key areas functionality: Data Management: File upload validation CSV parsing error handling Built-dataset loading (four_clusters, pdfsense, fake_trees) Empty cell detection data quality validation Column selection filtering capabilities Dynamic dataset storage retrieval system NLDR Computations: t-SNE implementation parameter validation auto-adjustment UMAP processing neighbor distance parameter controls Asynchronous computation using future package responsiveness Progress tracking user feedback long computations Result caching session management Interactive Visualizations: Plotly-based interactive scatter plots zoom, pan, selection Color mapping automatic palette generation Linked brushing across multiple visualizations Responsive plot sizing layout management Hover tooltips selection feedback Dynamic Tours: Integration detourr package animated projections Multiple display types: Scatter, Sage, Slice projections 5-nearest neighbor graph construction visualization Real-time parameter adjustment tour customization Coordinated views static dynamic visualizations Quality Assessment (Quollr Integration): Automated binwidth optimization using RMSE minimization Hexagonal binning centroid extraction High-dimensional model fitting validation Prediction error analysis visualization 3D model tours using langevitour integration Method Comparison: Side--side visualization comparison linked brushing RMSE-based parameter optimization comparison Best configuration identification reporting Interactive comparison plot generation State Management: Reactive value system maintaining application state Session-based data persistence cleanup Asynchronous operation tracking user feedback Memory management large datasets Parallel Processing: server automatically configures parallel processing: Uses multicore supported systems, multisession otherwise Configures 2 worker processes optimal performance Proper cleanup session end prevent memory leaks Future-based asynchronous computation UI responsiveness","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"function requires several packages available: Core: shiny, magrittr Visualization: plotly, ggplot2, DT, scales NLDR: Rtsne, umap, FNN Quality: quollr (dependencies) Tours: detourr, tourr Data: dplyr, crosstalk Async: future Utils: stats, utils, tools","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"reactive-values","dir":"Reference","previous_headings":"","what":"Reactive Values","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"server maintains several key reactive values: dataset: Current active dataset vis_results: NLDR computation results shared_vis_data: Crosstalk-enabled data linked brushing nldr_datasets: Storage multiple NLDR results optimal_config: Best binwidth configuration optimization quollr_results: Quality assessment results color_palette: Current color scheme visualizations is_running_*: Boolean flags operation status tracking","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"Comprehensive error handling includes: File upload validation user-friendly error messages NLDR computation error catching fallback options Memory management large datasets Network timeout handling async operations Graceful degradation optional features unavailable","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"performance-considerations","dir":"Reference","previous_headings":"","what":"Performance Considerations","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"Asynchronous computations prevent UI blocking Efficient data structures large datasets Caching expensive computations Memory cleanup garbage collection Optimized reactive dependency management","code":""},{"path":[]},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_server.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NLDR Visualization Tool Server Logic — nldr_viz_server","text":"GSoC Contributor","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NLDR Visualization Tool User Interface — nldr_viz_ui","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"Creates comprehensive user interface NLDR visualization tool using modern Bootstrap 5 styling bslib. UI provides intuitive tabbed interface data exploration, dimensionality reduction, quality assessment, method comparison.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"","code":"nldr_viz_ui()"},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"tagList object representing complete UI structure suitable use shinyApp module UI function. returned object contains necessary HTML, CSS, JavaScript dependencies.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"user interface organized five main navigation panels: 1. Dataset Preview Tab: File upload widget CSV datasets validation Selection built-example datasets (four_clusters, pdfsense, fake_trees) Interactive column selection auto-selection option Data preview table scrolling pagination Dataset summary statistics (rows, columns, data types) Storage management processed NLDR results 2. Dataset Visualization Tab: Method selection: t-SNE UMAP parameter controls t-SNE parameters: perplexity (5-50), max iterations (100-2000), auto-adjust option UMAP parameters: n_neighbors (2-50), min_dist (0.01-0.99) Color mapping options automatic manual column selection Reproducibility controls random seed setting Large interactive visualization plot (800px height) Visualization information panel method details 3. Dynamic Tour Tab: Tour display types: Scatter, Sage, Slice projections Display customization: axes, 5-NN graph edges, point opacity Type-specific parameters (alpha Scatter, gamma Sage, volume Slice) Linked brushing functionality interactive selection Side--side layout: NLDR plot dynamic tour visualization 4. Diagnosing Tab: Automated binwidth optimization RMSE-based selection Comprehensive quollr analysis embedding quality assessment 3D model tour generation langevitour integration Results presentation multiple tabs: RMSE vs Binwidth interactive plot Optimization results table sortable columns Model fit visualization showing prediction quality High-dimensional model tour deeper exploration Configuration summary optimal parameter display 5. Method Comparison Tab: Two comparison modes: NLDR Settings Comparison Side--Side Visualization Settings Comparison: RMSE comparison plots across multiple configurations Side--Side: Interactive linked plots direct method comparison Dataset selection controls stored results integration Linked brushing option synchronized selections Best configuration summary recommendations interface uses modern design principles: Responsive layout adapts different screen sizes Consistent spacing typography using Bootstrap 5 Loading indicators progress feedback long-running operations Intuitive iconography color coding different actions Collapsible sidebar layouts optimal screen real estate usage Contextual help text tooltips user guidance","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"UI function automatically imports required dependencies: bslib modern Bootstrap 5 theming (Lumen theme) plotly interactive visualizations DT enhanced data tables Custom CSS loading animations button states Font Awesome icons consistent iconography","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":"custom-css","dir":"Reference","previous_headings":"","what":"Custom CSS","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"interface includes custom CSS : Disabled button states reduced opacity Spinning loading animations progress indication Consistent button styling across different states Responsive card layouts spacing","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":"accessibility","dir":"Reference","previous_headings":"","what":"Accessibility","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"UI follows accessibility best practices: Proper ARIA labels roles interactive elements Keyboard navigation support throughout interface High contrast color scheme readability Screen reader compatible structure labeling","code":""},{"path":[]},{"path":"https://divendra2006.github.io/polarisR/reference/nldr_viz_ui.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NLDR Visualization Tool User Interface — nldr_viz_ui","text":"GSoC Contributor","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/pdfsense.html","id":null,"dir":"Reference","previous_headings":"","what":"PDFSense Dataset — pdfsense","title":"PDFSense Dataset — pdfsense","text":"dataset representing space parton distribution function fit, point variables labelled X1-X56 indicate moving +- 1 standard devation 'best' (maximum likelihood estimate) fit function. observation predictions corresponding measurement experiment.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/pdfsense.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PDFSense Dataset — pdfsense","text":"","code":"pdfsense"},{"path":"https://divendra2006.github.io/polarisR/reference/pdfsense.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PDFSense Dataset — pdfsense","text":"object class data.frame 2808 rows 62 columns.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/pdfsense.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PDFSense Dataset — pdfsense","text":"http://www.physics.smu.edu/botingw/PDFsense_web_histlogy/","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/pdfsense.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PDFSense Dataset — pdfsense","text":"(see table 3 paper explicit details). remaining columns : InFit: flag indicating whether observation entered fit CT14HERA2 parton distribution function Type: First number ID ID: contains identifier experiment, 1XX/2XX/5XX correpsonds Deep Inelastic Scattering (DIS) / Vector Boson Production (VBP) / Strong Interaction (JET). Every ID points experimental paper. pt: per experiment observational id x,mu: kinematics parton. x parton momentum fraction, mu factorisation scale.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/pdfsense.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PDFSense Dataset — pdfsense","text":"Wang, B.-T., Hobbs, T. J., Doyle, S., Gao, J., Hou, T.-J., Nadolsky, P. M., & Olness, F. . (2018). PDFSense: Mapping sensitivity hadronic experiments nucleon structure. Retrieved https://arxiv.org/abs/1808.07470 Cook, D., Laa, U., & Valencia, G. (2018). Dynamical projections visualization PDFSense data. European Physical Journal C, 78(9), 742. doi:10.1140/epjc/s10052-018-6205-2","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/run_nldr_viz.html","id":null,"dir":"Reference","previous_headings":"","what":"Run NLDR Visualization Tool — run_nldr_viz","title":"Run NLDR Visualization Tool — run_nldr_viz","text":"Launches interactive NLDR (Non-Linear Dimensionality Reduction) Visualization Tool shiny application exploring high-dimensional datasets using t-SNE UMAP.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/run_nldr_viz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run NLDR Visualization Tool — run_nldr_viz","text":"","code":"run_nldr_viz(...)"},{"path":"https://divendra2006.github.io/polarisR/reference/run_nldr_viz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run NLDR Visualization Tool — run_nldr_viz","text":"shiny application object launches NLDR visualization interface.","code":""},{"path":"https://divendra2006.github.io/polarisR/reference/run_nldr_viz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run NLDR Visualization Tool — run_nldr_viz","text":"application includes five main tabs: Dataset Preview: Upload data preview dataset characteristics Non-linear dimension reduction (NLDR): Apply t-SNE UMAP methods Dynamic Tour: Explore high-dimensional structure animated projections Diagnosing: Assess embedding quality using quollr package 2-D Layout Comparison: Compare different NLDR configurations","code":""},{"path":[]}]
